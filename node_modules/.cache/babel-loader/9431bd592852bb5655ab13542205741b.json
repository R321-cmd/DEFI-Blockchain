{"ast":null,"code":"\"use strict\";\n\nimport _createClass from \"C:/Users/LENOVO.USER/Downloads/TESIS_FINAL_DEFI_ACTUALIZADA/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/LENOVO.USER/Downloads/TESIS_FINAL_DEFI_ACTUALIZADA/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/LENOVO.USER/Downloads/TESIS_FINAL_DEFI_ACTUALIZADA/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/LENOVO.USER/Downloads/TESIS_FINAL_DEFI_ACTUALIZADA/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { getAddress as _getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nexport { checkResultErrors };\nexport var LogDescription = /*#__PURE__*/function (_Description) {\n  _inherits(LogDescription, _Description);\n  var _super = _createSuper(LogDescription);\n  function LogDescription() {\n    _classCallCheck(this, LogDescription);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(LogDescription);\n}(Description);\nexport var TransactionDescription = /*#__PURE__*/function (_Description2) {\n  _inherits(TransactionDescription, _Description2);\n  var _super2 = _createSuper(TransactionDescription);\n  function TransactionDescription() {\n    _classCallCheck(this, TransactionDescription);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(TransactionDescription);\n}(Description);\nexport var Indexed = /*#__PURE__*/function (_Description3) {\n  _inherits(Indexed, _Description3);\n  var _super3 = _createSuper(Indexed);\n  function Indexed() {\n    _classCallCheck(this, Indexed);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(Indexed, null, [{\n    key: \"isIndexed\",\n    value: function isIndexed(value) {\n      return !!(value && value._isIndexed);\n    }\n  }]);\n  return Indexed;\n}(Description);\nfunction wrapAccessError(property, error) {\n  var wrap = new Error(\"deferred error during ABI decoding triggered accessing \".concat(property));\n  wrap.error = error;\n  return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport var Interface = /*#__PURE__*/function () {\n  function Interface(fragments) {\n    var _this = this;\n    _classCallCheck(this, Interface);\n    logger.checkNew(this instanceof Interface ? this.constructor : void 0, Interface);\n    var abi = [];\n    if (typeof fragments === \"string\") {\n      abi = JSON.parse(fragments);\n    } else {\n      abi = fragments;\n    }\n    defineReadOnly(this, \"fragments\", abi.map(function (fragment) {\n      return Fragment.from(fragment);\n    }).filter(function (fragment) {\n      return fragment != null;\n    }));\n    defineReadOnly(this, \"_abiCoder\", getStatic(this instanceof Interface ? this.constructor : void 0, \"getAbiCoder\")());\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"errors\", {});\n    defineReadOnly(this, \"events\", {});\n    defineReadOnly(this, \"structs\", {});\n    // Add all fragments by their signature\n    this.fragments.forEach(function (fragment) {\n      var bucket = null;\n      switch (fragment.type) {\n        case \"constructor\":\n          if (_this.deploy) {\n            logger.warn(\"duplicate definition - constructor\");\n            return;\n          }\n          //checkNames(fragment, \"input\", fragment.inputs);\n          defineReadOnly(_this, \"deploy\", fragment);\n          return;\n        case \"function\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n          bucket = _this.functions;\n          break;\n        case \"event\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          bucket = _this.events;\n          break;\n        default:\n          return;\n      }\n      var signature = fragment.format();\n      if (bucket[signature]) {\n        logger.warn(\"duplicate definition - \" + signature);\n        return;\n      }\n      bucket[signature] = fragment;\n    });\n    // If we do not have a constructor add a default\n    if (!this.deploy) {\n      defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n        payable: false,\n        type: \"constructor\"\n      }));\n    }\n    defineReadOnly(this, \"_isInterface\", true);\n  }\n  _createClass(Interface, [{\n    key: \"format\",\n    value: function format(_format) {\n      if (!_format) {\n        _format = FormatTypes.full;\n      }\n      if (_format === FormatTypes.sighash) {\n        logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", _format);\n      }\n      var abi = this.fragments.map(function (fragment) {\n        return fragment.format(_format);\n      });\n      // We need to re-bundle the JSON fragments a bit\n      if (_format === FormatTypes.json) {\n        return JSON.stringify(abi.map(function (j) {\n          return JSON.parse(j);\n        }));\n      }\n      return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n  }, {\n    key: \"getFunction\",\n    value:\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    function getFunction(nameOrSignatureOrSighash) {\n      if (isHexString(nameOrSignatureOrSighash)) {\n        for (var name in this.functions) {\n          if (nameOrSignatureOrSighash === this.getSighash(name)) {\n            return this.functions[name];\n          }\n        }\n        logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n      }\n      // It is a bare name, look up the function (will return null if ambiguous)\n      if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n        var _name = nameOrSignatureOrSighash.trim();\n        var matching = Object.keys(this.functions).filter(function (f) {\n          return f.split(\"(\" /* fix:) */)[0] === _name;\n        });\n        if (matching.length === 0) {\n          logger.throwArgumentError(\"no matching function\", \"name\", _name);\n        } else if (matching.length > 1) {\n          logger.throwArgumentError(\"multiple matching functions\", \"name\", _name);\n        }\n        return this.functions[matching[0]];\n      }\n      // Normlize the signature and lookup the function\n      var result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n      if (!result) {\n        logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n      }\n      return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n  }, {\n    key: \"getEvent\",\n    value: function getEvent(nameOrSignatureOrTopic) {\n      if (isHexString(nameOrSignatureOrTopic)) {\n        var topichash = nameOrSignatureOrTopic.toLowerCase();\n        for (var name in this.events) {\n          if (topichash === this.getEventTopic(name)) {\n            return this.events[name];\n          }\n        }\n        logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n      }\n      // It is a bare name, look up the function (will return null if ambiguous)\n      if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n        var _name2 = nameOrSignatureOrTopic.trim();\n        var matching = Object.keys(this.events).filter(function (f) {\n          return f.split(\"(\" /* fix:) */)[0] === _name2;\n        });\n        if (matching.length === 0) {\n          logger.throwArgumentError(\"no matching event\", \"name\", _name2);\n        } else if (matching.length > 1) {\n          logger.throwArgumentError(\"multiple matching events\", \"name\", _name2);\n        }\n        return this.events[matching[0]];\n      }\n      // Normlize the signature and lookup the function\n      var result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n      if (!result) {\n        logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n      }\n      return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n  }, {\n    key: \"getSighash\",\n    value: function getSighash(functionFragment) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n      return getStatic(this.constructor, \"getSighash\")(functionFragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n  }, {\n    key: \"getEventTopic\",\n    value: function getEventTopic(eventFragment) {\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n      return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n  }, {\n    key: \"_decodeParams\",\n    value: function _decodeParams(params, data) {\n      return this._abiCoder.decode(params, data);\n    }\n  }, {\n    key: \"_encodeParams\",\n    value: function _encodeParams(params, values) {\n      return this._abiCoder.encode(params, values);\n    }\n  }, {\n    key: \"encodeDeploy\",\n    value: function encodeDeploy(values) {\n      return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    // Decode the data for a function call (e.g. tx.data)\n  }, {\n    key: \"decodeFunctionData\",\n    value: function decodeFunctionData(functionFragment, data) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n      var bytes = arrayify(data);\n      if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n        logger.throwArgumentError(\"data signature does not match function \".concat(functionFragment.name, \".\"), \"data\", hexlify(bytes));\n      }\n      return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n  }, {\n    key: \"encodeFunctionData\",\n    value: function encodeFunctionData(functionFragment, values) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n      return hexlify(concat([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n  }, {\n    key: \"decodeFunctionResult\",\n    value: function decodeFunctionResult(functionFragment, data) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n      var bytes = arrayify(data);\n      var reason = null;\n      var errorSignature = null;\n      switch (bytes.length % this._abiCoder._getWordSize()) {\n        case 0:\n          try {\n            return this._abiCoder.decode(functionFragment.outputs, bytes);\n          } catch (error) {}\n          break;\n        case 4:\n          if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            errorSignature = \"Error(string)\";\n            reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n          }\n          break;\n      }\n      return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n        method: functionFragment.format(),\n        errorSignature: errorSignature,\n        errorArgs: [reason],\n        reason: reason\n      });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n  }, {\n    key: \"encodeFunctionResult\",\n    value: function encodeFunctionResult(functionFragment, values) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n      return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n  }, {\n    key: \"encodeFilterTopics\",\n    value: function encodeFilterTopics(eventFragment, values) {\n      var _this2 = this;\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n      if (values.length > eventFragment.inputs.length) {\n        logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n          argument: \"values\",\n          value: values\n        });\n      }\n      var topics = [];\n      if (!eventFragment.anonymous) {\n        topics.push(this.getEventTopic(eventFragment));\n      }\n      var encodeTopic = function encodeTopic(param, value) {\n        if (param.type === \"string\") {\n          return id(value);\n        } else if (param.type === \"bytes\") {\n          return keccak256(hexlify(value));\n        }\n        // Check addresses are valid\n        if (param.type === \"address\") {\n          _this2._abiCoder.encode([\"address\"], [value]);\n        }\n        return hexZeroPad(hexlify(value), 32);\n      };\n      values.forEach(function (value, index) {\n        var param = eventFragment.inputs[index];\n        if (!param.indexed) {\n          if (value != null) {\n            logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n          }\n          return;\n        }\n        if (value == null) {\n          topics.push(null);\n        } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n          logger.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n        } else if (Array.isArray(value)) {\n          topics.push(value.map(function (value) {\n            return encodeTopic(param, value);\n          }));\n        } else {\n          topics.push(encodeTopic(param, value));\n        }\n      });\n      // Trim off trailing nulls\n      while (topics.length && topics[topics.length - 1] === null) {\n        topics.pop();\n      }\n      return topics;\n    }\n  }, {\n    key: \"encodeEventLog\",\n    value: function encodeEventLog(eventFragment, values) {\n      var _this3 = this;\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n      var topics = [];\n      var dataTypes = [];\n      var dataValues = [];\n      if (!eventFragment.anonymous) {\n        topics.push(this.getEventTopic(eventFragment));\n      }\n      if (values.length !== eventFragment.inputs.length) {\n        logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n      }\n      eventFragment.inputs.forEach(function (param, index) {\n        var value = values[index];\n        if (param.indexed) {\n          if (param.type === \"string\") {\n            topics.push(id(value));\n          } else if (param.type === \"bytes\") {\n            topics.push(keccak256(value));\n          } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n            // @TOOD\n            throw new Error(\"not implemented\");\n          } else {\n            topics.push(_this3._abiCoder.encode([param.type], [value]));\n          }\n        } else {\n          dataTypes.push(param);\n          dataValues.push(value);\n        }\n      });\n      return {\n        data: this._abiCoder.encode(dataTypes, dataValues),\n        topics: topics\n      };\n    }\n    // Decode a filter for the event and the search criteria\n  }, {\n    key: \"decodeEventLog\",\n    value: function decodeEventLog(eventFragment, data, topics) {\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n      if (topics != null && !eventFragment.anonymous) {\n        var topicHash = this.getEventTopic(eventFragment);\n        if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n          logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, {\n            argument: \"topics[0]\",\n            expected: topicHash,\n            value: topics[0]\n          });\n        }\n        topics = topics.slice(1);\n      }\n      var indexed = [];\n      var nonIndexed = [];\n      var dynamic = [];\n      eventFragment.inputs.forEach(function (param, index) {\n        if (param.indexed) {\n          if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n            indexed.push(ParamType.fromObject({\n              type: \"bytes32\",\n              name: param.name\n            }));\n            dynamic.push(true);\n          } else {\n            indexed.push(param);\n            dynamic.push(false);\n          }\n        } else {\n          nonIndexed.push(param);\n          dynamic.push(false);\n        }\n      });\n      var resultIndexed = topics != null ? this._abiCoder.decode(indexed, concat(topics)) : null;\n      var resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n      var result = [];\n      var nonIndexedIndex = 0,\n        indexedIndex = 0;\n      eventFragment.inputs.forEach(function (param, index) {\n        if (param.indexed) {\n          if (resultIndexed == null) {\n            result[index] = new Indexed({\n              _isIndexed: true,\n              hash: null\n            });\n          } else if (dynamic[index]) {\n            result[index] = new Indexed({\n              _isIndexed: true,\n              hash: resultIndexed[indexedIndex++]\n            });\n          } else {\n            try {\n              result[index] = resultIndexed[indexedIndex++];\n            } catch (error) {\n              result[index] = error;\n            }\n          }\n        } else {\n          try {\n            result[index] = resultNonIndexed[nonIndexedIndex++];\n          } catch (error) {\n            result[index] = error;\n          }\n        }\n        // Add the keyword argument if named and safe\n        if (param.name && result[param.name] == null) {\n          var value = result[index];\n          // Make error named values throw on access\n          if (value instanceof Error) {\n            Object.defineProperty(result, param.name, {\n              get: function get() {\n                throw wrapAccessError(\"property \".concat(JSON.stringify(param.name)), value);\n              }\n            });\n          } else {\n            result[param.name] = value;\n          }\n        }\n      });\n      // Make all error indexed values throw on access\n      var _loop = function _loop(i) {\n        var value = result[i];\n        if (value instanceof Error) {\n          Object.defineProperty(result, i, {\n            get: function get() {\n              throw wrapAccessError(\"index \".concat(i), value);\n            }\n          });\n        }\n      };\n      for (var i = 0; i < result.length; i++) {\n        _loop(i);\n      }\n      return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n  }, {\n    key: \"parseTransaction\",\n    value: function parseTransaction(tx) {\n      var fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n      if (!fragment) {\n        return null;\n      }\n      return new TransactionDescription({\n        args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n        functionFragment: fragment,\n        name: fragment.name,\n        signature: fragment.format(),\n        sighash: this.getSighash(fragment),\n        value: BigNumber.from(tx.value || \"0\")\n      });\n    }\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n  }, {\n    key: \"parseLog\",\n    value: function parseLog(log) {\n      var fragment = this.getEvent(log.topics[0]);\n      if (!fragment || fragment.anonymous) {\n        return null;\n      }\n      // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n      //        Probably not, because just because it is the only event in the ABI does\n      //        not mean we have the full ABI; maybe jsut a fragment?\n      return new LogDescription({\n        eventFragment: fragment,\n        name: fragment.name,\n        signature: fragment.format(),\n        topic: this.getEventTopic(fragment),\n        args: this.decodeEventLog(fragment, log.data, log.topics)\n      });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n  }], [{\n    key: \"getAbiCoder\",\n    value: function getAbiCoder() {\n      return defaultAbiCoder;\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(address) {\n      return _getAddress(address);\n    }\n  }, {\n    key: \"getSighash\",\n    value: function getSighash(functionFragment) {\n      return hexDataSlice(id(functionFragment.format()), 0, 4);\n    }\n  }, {\n    key: \"getEventTopic\",\n    value: function getEventTopic(eventFragment) {\n      return id(eventFragment.format());\n    }\n  }, {\n    key: \"isInterface\",\n    value: function isInterface(value) {\n      return !!(value && value._isInterface);\n    }\n  }]);\n  return Interface;\n}();","map":{"version":3,"names":["_createClass","_classCallCheck","_inherits","_createSuper","getAddress","BigNumber","arrayify","concat","hexDataSlice","hexlify","hexZeroPad","isHexString","id","keccak256","defineReadOnly","Description","getStatic","defaultAbiCoder","checkResultErrors","ConstructorFragment","EventFragment","FormatTypes","Fragment","FunctionFragment","ParamType","Logger","version","logger","LogDescription","_Description","_super","apply","arguments","TransactionDescription","_Description2","_super2","Indexed","_Description3","_super3","key","value","isIndexed","_isIndexed","wrapAccessError","property","error","wrap","Error","Interface","fragments","_this","checkNew","constructor","abi","JSON","parse","map","fragment","from","filter","forEach","bucket","type","deploy","warn","functions","events","signature","format","payable","full","sighash","throwArgumentError","json","stringify","j","getFunction","nameOrSignatureOrSighash","name","getSighash","indexOf","trim","matching","Object","keys","f","split","length","result","fromString","getEvent","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","functionFragment","eventFragment","_decodeParams","params","data","_abiCoder","decode","_encodeParams","values","encode","encodeDeploy","inputs","decodeFunctionData","bytes","slice","encodeFunctionData","decodeFunctionResult","reason","errorSignature","_getWordSize","outputs","throwError","errors","CALL_EXCEPTION","method","errorArgs","encodeFunctionResult","encodeFilterTopics","_this2","UNEXPECTED_ARGUMENT","argument","topics","anonymous","push","encodeTopic","param","index","indexed","baseType","Array","isArray","pop","encodeEventLog","_this3","dataTypes","dataValues","decodeEventLog","topicHash","INVALID_ARGUMENT","expected","nonIndexed","dynamic","fromObject","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","defineProperty","get","_loop","i","freeze","parseTransaction","tx","substring","args","parseLog","log","topic","getAbiCoder","address","isInterface","_isInterface"],"sources":["../src.ts/interface.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}